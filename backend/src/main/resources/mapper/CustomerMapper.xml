<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.bob.mta.modules.customer.persistence.CustomerMapper">

    <resultMap id="CustomerSummaryMap" type="com.bob.mta.modules.customer.persistence.CustomerSummaryRecord">
        <id property="id" column="customer_id"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="groupName" column="group_name"/>
        <result property="region" column="region"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="tags" column="tags" typeHandler="com.bob.mta.common.mybatis.StringListJsonTypeHandler"/>
    </resultMap>

    <resultMap id="CustomerDetailMap" type="com.bob.mta.modules.customer.persistence.CustomerDetailRecord">
        <id property="id" column="customer_id"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="shortName" column="short_name"/>
        <result property="groupName" column="group_name"/>
        <result property="region" column="region"/>
        <result property="updatedAt" column="updated_at"/>
        <result property="tags" column="tags" typeHandler="com.bob.mta.common.mybatis.StringListJsonTypeHandler"/>
    </resultMap>

    <resultMap id="CustomerEntityMap" type="com.bob.mta.modules.customer.persistence.CustomerEntity">
        <id property="id" column="customer_id"/>
        <result property="tenantId" column="tenant_id"/>
        <result property="code" column="code"/>
        <result property="name" column="name"/>
        <result property="shortName" column="short_name"/>
        <result property="groupName" column="group_name"/>
        <result property="region" column="region"/>
        <result property="createdAt" column="created_at"/>
        <result property="updatedAt" column="updated_at"/>
    </resultMap>

    <sql id="CustomerFilter">
        WHERE c.tenant_id = #{tenantId}
        <if test="keyword != null and keyword != ''">
            AND (
                    lower(c.name) LIKE lower(CONCAT('%', #{keyword}, '%'))
                    OR lower(c.code) LIKE lower(CONCAT('%', #{keyword}, '%'))
                    OR lower(c.short_name) LIKE lower(CONCAT('%', #{keyword}, '%'))
                )
        </if>
        <if test="region != null and region != ''">
            AND c.region = #{region}
        </if>
    </sql>

    <select id="search" resultMap="CustomerSummaryMap">
        SELECT c.customer_id,
               c.code,
               c.name,
               c.group_name,
               c.region,
               c.updated_at,
               COALESCE(json_agg(t.default_name ORDER BY t.default_name)
                        FILTER (WHERE t.default_name IS NOT NULL), '[]') AS tags
        FROM mt_customer c
                 LEFT JOIN mt_tag_assignment ct ON c.customer_id = ct.entity_id AND c.tenant_id = ct.tenant_id AND ct.entity_type = CUSTOMER
                 LEFT JOIN mt_tag_definition t ON ct.tag_id = t.tag_id AND ct.tenant_id = t.tenant_id
        <include refid="CustomerFilter"/>
        GROUP BY c.customer_id, c.code, c.name, c.group_name, c.region, c.updated_at
        ORDER BY c.code
        LIMIT #{limit} OFFSET #{offset}
    </select>

    <select id="count" resultType="long">
        SELECT COUNT(*)
        FROM mt_customer c
        <include refid="CustomerFilter"/>
    </select>

    <select id="findDetail" resultMap="CustomerDetailMap">
        SELECT c.customer_id,
               c.code,
               c.name,
               c.short_name,
               c.group_name,
               c.region,
               c.updated_at,
               COALESCE(json_agg(t.default_name ORDER BY t.default_name)
                        FILTER (WHERE t.default_name IS NOT NULL), '[]') AS tags
        FROM mt_customer c
                 LEFT JOIN mt_tag_assignment ct ON c.customer_id = ct.entity_id AND c.tenant_id = ct.tenant_id AND ct.entity_type = CUSTOMER
                 LEFT JOIN mt_tag_definition t ON ct.tag_id = t.tag_id AND ct.tenant_id = t.tenant_id
        WHERE c.tenant_id = #{tenantId}
          AND c.customer_id = #{customerId}
        GROUP BY c.customer_id, c.code, c.name, c.short_name, c.group_name, c.region, c.updated_at
    </select>

    <select id="findById" resultMap="CustomerEntityMap">
        SELECT c.customer_id,
               c.tenant_id,
               c.code,
               c.name,
               c.short_name,
               c.group_name,
               c.region,
               c.created_at,
               c.updated_at
        FROM mt_customer c
        WHERE c.tenant_id = #{tenantId}
          AND c.customer_id = #{customerId}
    </select>
</mapper>
